---
import PlatformReportCard from "@components/category-report-card.astro";
import QuestionCard from "@components/question-card.astro";
import SeeMoreLink from "@components/see-more-link.astro";
import LongText from "@atoms/long-text.astro";
import Traders from "@atoms/traders.astro";
import Volume from "@atoms/volume.astro";
import Markets from "@atoms/num-markets.astro";
import Base from "@layouts/base.astro";
import {
  getPlatforms,
  getCategories,
  getPlatformCategoryScores,
  getFeaturedQuestions,
  getMarketScoresByQuestion,
  getPlatformOverallScores,
} from "@lib/api";

const scoreType = "brier-relative";

const platforms = await getPlatforms();
const categories = await getCategories();
const platformCategoryScores = await getPlatformCategoryScores(null);
const platformOverallScores = await getPlatformOverallScores();
const featuredQuestions = await getFeaturedQuestions(6);
const marketScores = await getMarketScoresByQuestion(
  featuredQuestions.map((q) => q.id),
  scoreType,
);
---

<Base title="Categories">
  <div class="p-4 m-2">
    <h1 class="text-4xl font-bold">All Market Platforms</h1>
  </div>

  {
    platforms.map((platform) => (
      <div class="px-4 m-2">
        <div class="flex space-x-8 pb-2 border-b-2 flex-col sm:flex-row">
          <h2 class="font-bold text-2xl">
            <a href={`/platform/${platform.slug}`}>{platform.name}</a>
          </h2>
          <div class="self-baseline sm:self-center">
            <ul class="flex items-center space-x-4">
              <li>
                <Markets num={platform.total_markets} />
              </li>
              {platform.total_traders && (
                <li>
                  <Traders num={platform.total_traders} />
                </li>
              )}
              {platform.total_volume && (
                <li>
                  <Volume num={platform.total_volume} />
                </li>
              )}
            </ul>
          </div>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2">
          <div class="my-2">
            <LongText text={platform.long_description} />
          </div>
          <PlatformReportCard
            platforms={platforms}
            categories={categories}
            platformCategoryScores={platformCategoryScores.filter(
              (score) => score.platform_slug == platform.slug,
            )}
            overallScores={platformOverallScores}
            pivot="category"
          />
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
          {featuredQuestions.map((question) => {
            return (
              <QuestionCard
                question={question}
                scores={marketScores.filter(
                  (score) => score.question_id === question.id,
                )}
              />
            );
          })}
        </div>
        <SeeMoreLink
          link={`/questions?platform=${platform.slug}`}
          text={`See all ${platform.name} questions`}
        />
      </div>
    ))
  }
</Base>
