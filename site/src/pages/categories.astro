---
import CategoryReportCard from "@components/category-report-card.astro";
import QuestionCard from "@components/question-card.astro";
import SeeMoreLink from "@components/see-more-link.astro";
import Traders from "@atoms/traders.astro";
import Volume from "@atoms/volume.astro";
import Markets from "@atoms/num-markets.astro";
import Base from "@layouts/base.astro";
import {
  getCategories,
  getPlatformCategoryScores,
  getFeaturedQuestions,
  getPlatformOverallScores,
  getMarketScoresByQuestion,
} from "@lib/api";

const categories = await getCategories();
const platformCategoryScores =
  await getPlatformCategoryScores("brier-relative");
const platformOverallScores = await getPlatformOverallScores();
const featuredQuestions = await getFeaturedQuestions(6);
const marketScores = await getMarketScoresByQuestion(
  featuredQuestions.map((q) => q.id),
  "brier-relative",
);
---

<Base title="Categories">
  <div class="p-4 m-2">
    <h1 class="text-4xl font-bold">All Categories</h1>
  </div>

  {
    categories.map((category) => (
      <div class="px-4 m-2">
        <div class="flex space-x-8 pb-2 border-b-2 flex-col sm:flex-row">
          <h2 class="font-bold text-2xl">
            <a href={`/category/${category.slug}`}>{category.name}</a>
          </h2>
          <div class="self-baseline sm:self-center">
            <ul class="flex items-center space-x-4">
              <li>
                <Markets num={category.total_markets} />
              </li>
              <li>
                <Traders num={category.total_traders} />
              </li>
              <li>
                <Volume num={category.total_volume} />
              </li>
            </ul>
          </div>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2">
          <div class="m-2">
            <p class="my-2">{category.description}</p>
          </div>
          <CategoryReportCard
            scores={platformCategoryScores.filter(
              (score) => score.category_slug == category.slug,
            )}
            pivot="platform"
          />
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
          {featuredQuestions.map((question) => {
            const questionScores = marketScores.filter(
              (score) => score.question_id === question.id,
            );
            return <QuestionCard question={question} scores={questionScores} />;
          })}
        </div>
        <SeeMoreLink
          link={`/questions?category=${category.slug}`}
          text={`See all ${category.name} questions`}
        />
      </div>
    ))
  }
</Base>
