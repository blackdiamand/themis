---
import Base from "@layouts/base.astro";
import AccuracyBoxSelect from "@components/charts/accuracy-box-select.astro";
import HistogramSelect from "@components/charts/histogram-select.astro";
import { getPlatforms, getCategories, getMarketScores } from "@lib/api";

// Download data
const platforms = await getPlatforms();
const categories = await getCategories();
const marketScores = await getMarketScores();

// pre-sort scores for easier percentile calculations
const scores = [...marketScores].sort((a, b) => a.score - b.score);
---

<Base title="Accuracy Charts">
  <div class="p-4 m-2 pb-0 mb-0">
    <h1 class="text-4xl font-bold">Accuracy Charts</h1>
    <div class="mt-2">
      While calibration is focused on how your predictions match reality,
      accuracy is focused on how often you were correct. The main accuracy score
      we use here is the Brier score, which compares the prediction (usually at
      the market's midpoint) with the resolution at the end of the market. The
      thing to remember is that the Brier score meausres how far off you are,
      meaning that a lower score is actaully better!
    </div>
  </div>

  <div class="p-4 m-2">
    <div class="my-4">
      <h2 class="font-bold text-2xl" id="vary-selection">Basic Filtering</h2>
      <div class="my-2">
        Select markets to include based on key attributes, such as number of
        traders, market volume, and duration. Alternatively, pick from a few
        other selection criteria.
      </div>
    </div>
    <AccuracyBoxSelect
      plotId="basic"
      platforms={platforms}
      options={[
        {
          icon: "mdi:all-inclusive-box",
          description: "Show all resolved markets.",
          scores: scores,
        },
        {
          icon: "mdi:alpha-a-box",
          description:
            "Filter to at least 10 traders or $100 in trade volume, and open for at least 2 days.",
          scores: scores.filter((ms) => {
            return (
              ((ms.traders_count !== null && ms.traders_count >= 10) ||
                (ms.volume_usd !== null && ms.volume_usd >= 100)) &&
              ms.duration_days >= 2
            );
          }),
        },
        {
          icon: "mdi:alpha-b-box",
          description:
            "Filter to at least 100 traders or $1000 in trade volume, and open for at least 14 days.",
          scores: scores.filter((ms) => {
            return (
              ((ms.traders_count !== null && ms.traders_count >= 100) ||
                (ms.volume_usd !== null && ms.volume_usd >= 1000)) &&
              ms.duration_days >= 14
            );
          }),
        },
        {
          icon: "mdi:alpha-c-box",
          description:
            "Filter to at least 1000 traders or $10,000 in trade volume, and open for at least 30 days.",
          scores: scores.filter((ms) => {
            return (
              ((ms.traders_count !== null && ms.traders_count >= 1000) ||
                (ms.volume_usd !== null && ms.volume_usd >= 10000)) &&
              ms.duration_days >= 30
            );
          }),
        },
        {
          icon: "mdi:calendar-check",
          description: "Filter to markets resolved in the past 12 months.",
          scores: scores.filter(
            (ms) =>
              new Date(ms.close_datetime).getTime() >=
              new Date().getTime() - 365 * 24 * 60 * 60 * 1000,
          ),
        },
        {
          icon: "mdi:check-decagram",
          description: "Filter to markets that have been linked in questions.",
          scores: scores.filter((ms) => ms.question_id),
        },
      ]}
    />
  </div>
  <hr class="my-2" />

  <div class="p-4 m-2">
    <div class="my-4">
      <h2 class="font-bold text-2xl" id="vary-selection">Pick a Score</h2>
      <div class="my-2">
        We use the Brier score by default in most plots, but we calculate many
        more. Take a look at how the platforms compare when using these
        alternative scoring methods.
      </div>
    </div>
    <AccuracyBoxSelect
      plotId="scoreTypeBox"
      platforms={platforms}
      options={[
        {
          scoreType: "brier-midpoint",
          scores: scores,
          description:
            "Market Brier score, calculated with midpoint probability",
          axisTitleY: "Midpoint Brier score",
          plotRangeStart: 0,
          plotRangeEnd: 0.8,
        },
        {
          scoreType: "brier-average",
          scores: scores,
          description: "Market Brier score, averaged over the entire market",
          axisTitleY: "Average Brier score",
          plotRangeStart: 0,
          plotRangeEnd: 0.8,
        },
        {
          scoreType: "brier-relative",
          scores: scores,
          description: "Relative Brier score, calculated for linked markets",
          axisTitleY: "Relative Brier score",
          plotRangeStart: -0.08,
          plotRangeEnd: 0.08,
        },
        {
          scoreType: "logarithmic-midpoint",
          scores: scores,
          description: "Market log score, calculated with midpoint probability",
          axisTitleY: "Midpoint log score",
          plotRangeStart: -2,
          plotRangeEnd: 0,
        },
        {
          scoreType: "logarithmic-average",
          scores: scores,
          description: "Market log score, averaged over the entire market",
          axisTitleY: "Average log score",
          plotRangeStart: -2,
          plotRangeEnd: 0,
        },
        {
          scoreType: "logarithmic-relative",
          scores: scores,
          description: "Relative log score, calculated for linked markets",
          axisTitleY: "Relative log score",
          plotRangeStart: -0.2,
          plotRangeEnd: 0.2,
        },
      ]}
    />
  </div>
  <hr class="my-2" />

  <div class="p-4 m-2">
    <div class="my-4">
      <h2 class="font-bold text-2xl" id="vary-selection">Accuracy Histogram</h2>
      <div class="my-2">
        Are there significant spikes or outliers in the accuracy distribution?
        For instance, a spike around 0.25 would indicate lots of markets that
        rested at 50% probability. We'll look at the same scores as above, but
        showing the distribution in a histogram.
      </div>
    </div>
    <HistogramSelect
      plotId="histogram-platform"
      platforms={platforms}
      options={[
        {
          description:
            "Market Brier score, calculated with midpoint probability",
          items: scores
            .filter((score) => score.score_type === "brier-midpoint")
            .map((score) => ({
              value: score.score,
              platformSlug: score.platform_slug,
            })),
          plotTitle: "Histogram of Scores",
          axisTitleX: "Midpoint Brier score",
          rangeStart: 0,
          rangeEnd: 1,
        },
        {
          description: "Market Brier score, averaged over the entire market",
          items: scores
            .filter((score) => score.score_type === "brier-average")
            .map((score) => ({
              value: score.score,
              platformSlug: score.platform_slug,
            })),
          plotTitle: "Histogram of Scores",
          axisTitleX: "Average Brier score",
          rangeStart: 0,
          rangeEnd: 1,
        },
        {
          description: "Relative Brier score, calculated for linked markets",
          items: scores
            .filter((score) => score.score_type === "brier-relative")
            .map((score) => ({
              value: score.score,
              platformSlug: score.platform_slug,
            })),
          plotTitle: "Histogram of Scores",
          axisTitleX: "Relative Brier score",
          rangeStart: -0.1,
          rangeEnd: 0.1,
        },
        {
          description: "Market log score, calculated with midpoint probability",
          items: scores
            .filter((score) => score.score_type === "logarithmic-midpoint")
            .map((score) => ({
              value: score.score,
              platformSlug: score.platform_slug,
            })),
          plotTitle: "Histogram of Scores",
          axisTitleX: "Midpoint log score",
          rangeStart: -3,
          rangeEnd: 0,
        },
        {
          description: "Market log score, averaged over the entire market",
          items: scores
            .filter((score) => score.score_type === "logarithmic-average")
            .map((score) => ({
              value: score.score,
              platformSlug: score.platform_slug,
            })),
          plotTitle: "Histogram of Scores",
          axisTitleX: "Average log score",
          rangeStart: -3,
          rangeEnd: 0,
        },
        {
          description: "Relative log score, calculated for linked markets",
          items: scores
            .filter((score) => score.score_type === "logarithmic-relative")
            .map((score) => ({
              value: score.score,
              platformSlug: score.platform_slug,
            })),
          plotTitle: "Histogram of Scores",
          axisTitleX: "Relative log score",
          rangeStart: -0.25,
          rangeEnd: 0.25,
        },
      ]}
    />
  </div>
  <hr class="my-2" />

  <div class="p-4 m-2">
    <div class="my-4">
      <h2 class="font-bold text-2xl" id="vary-category">Category Filtering</h2>
      <div class="my-2">
        Group markets based on what category they're in. This is determined by
        how they are categorized on each platforn, and not all platforms are
        supported yet.
      </div>
    </div>
    <AccuracyBoxSelect
      plotId="category"
      platforms={platforms}
      options={[
        {
          icon: "mdi:compass-rose",
          description: "All categories",
          scores: scores,
        },
      ].concat(
        categories.map((category) => ({
          icon: category.icon,
          description: category.name,
          scores: scores.filter((ms) => ms.category_slug == category.slug),
        })),
      )}
    />
  </div>
  <hr class="my-2" />

  <div class="p-4 m-2">
    <div class="my-4">
      <h2 class="font-bold text-2xl" id="vary-selection">Resolution</h2>
      <div class="my-2">
        At a glance, you might think the resolution of a market shouldn't affect
        the accuracy much. However, there tend to be distinct types of markets
        on most platforms (often in the form of "Will X event happen by Y
        date?"). If you believe that <a
          href="https://knowyourmeme.com/memes/nothing-ever-happens"
          class="text-lavender">nothing ever happens</a
        >, then you might expect that betting NO a lot will make you pretty
        accurate.
      </div>
    </div>
    <AccuracyBoxSelect
      plotId="resolution"
      platforms={platforms}
      options={[
        {
          icon: "mdi:all-inclusive-box",
          description: "All markets, regardless of resolution",
          scores: scores,
        },
        {
          icon: "mdi:numeric-1-circle",
          description: "Only markets that resolved YES",
          scores: scores.filter((ms) => ms.resolution == 1),
        },
        {
          icon: "mdi:numeric-0-circle",
          description: "Only markets that resolved NO",
          scores: scores.filter((ms) => ms.resolution == 0),
        },
        {
          icon: "mdi:help-circle",
          description: "Only markets that resolved to something inbetween",
          scores: scores.filter(
            (ms) => ms.resolution != 0 && ms.resolution != 1,
          ),
        },
      ]}
    />
  </div>
</Base>
