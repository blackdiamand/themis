---
import type { QuestionDetails, PlatformDetails } from "@types";
import { getDailyProbabilitiesByQuestion } from "@lib/api";

import * as Plot from "@observablehq/plot";
import { JSDOM } from "jsdom";
const { document } = new JSDOM().window;

interface Props {
  platforms: PlatformDetails[];
  question: QuestionDetails;
  resolution: number;
  width?: number;
  height?: number;
}
const {
  platforms,
  question,
  resolution,
  width = 600,
  height = 200,
} = Astro.props;

const points = await getDailyProbabilitiesByQuestion(
  question.id,
  question.start_date_override,
  question.end_date_override,
);

// Generate the plot
const plot = Plot.plot({
  title: "Probability History",
  width: width,
  height: height,
  x: { type: "utc", label: null },
  y: {
    domain: [0, 100],
    grid: true,
    percent: true,
    label: "Probability",
  },
  color: {
    //legend: platforms.length > 1,
    label: "Platform",
    domain: platforms.map((p) => p.name),
    range: platforms.map((p) => p.color_primary),
  },
  marks: [
    Plot.line(points, {
      x: "date",
      y: (i) => (i.question_invert ? 1 - i.prob : i.prob),
      stroke: (i) => i.platform_name,
      curve: "step",
      tip: {
        format: {
          x: (i) => new Date(i).toLocaleDateString(),
          y: (i) => i.toFixed(0) + "%",
          z: false,
        },
      },
    }),
    Plot.dot([{ x: question.end_date_actual, y: resolution }], {
      x: "x",
      y: "y",
      r: 4,
      symbol: "diamond",
    }),
    Plot.ruleY([0]),
  ],
  document,
}).outerHTML;
---

<div
  class="bg-base-light [&_h2]:text-xl text-crust rounded-md drop-shadow-sm p-4 m-2 overflow-x-auto"
>
  <Fragment set:html={plot} />
  <p class="text-xs">
    Source: <a href="https://brier.fyi">brier.fyi</a>
  </p>
</div>
