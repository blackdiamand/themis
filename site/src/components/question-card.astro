---
import Grade from "@atoms/grade.astro";
import Volume from "@atoms/volume.astro";
import Traders from "@atoms/traders.astro";
import ScoreRel from "@atoms/score-rel.astro";
import type { Question } from "@types";
import { undefined } from "astro:schema";

interface Props {
    question?: Question;
}

let { question } = Astro.props;

if (!question) {
    const qst_response = await fetch(
        "https://data.predictionmetrics.org/questions",
    );
    const questions: Question[] = await qst_response.json();
    question = questions[0];
}
---

<div class="bg-crust rounded-md drop-shadow-sm p-4 m-2">
    <div class="font-bold mb-2">
        <a href={"q/" + question.slug}>
            {question.title}
        </a>
    </div>
    <div class="text-sm">
        <ul class="flex items-center space-x-4">
            <li>
                <a href="">{question.subCategory || question.parentCategory}</a>
            </li>
            <li><Traders traders={question.totalTraders} /></li>
            <li><Volume amount={question.totalVolume} /></li>
        </ul>
    </div>

    <table class="mt-2 table-auto text-sm w-full">
        <tbody>
            {
                question.markets.map((market) => (
                    <tr>
                        <td class="px-2 pt-1">{market.platform}</td>
                        <td class="px-2 pt-1">
                            <Grade grade={market.grade} />
                        </td>
                        <td class="px-2 pt-1 font-mono">
                            <ScoreRel score={market.scoreRel} />
                        </td>
                    </tr>
                ))
            }
        </tbody>
    </table>
</div>
