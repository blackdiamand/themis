---
import Markets from "@atoms/num-markets.astro";
import Grade from "@atoms/grade.astro";
import ScoreRel from "@atoms/score-rel.astro";
import ScoreAbs from "@atoms/score-abs.astro";
import type { PlatformScore } from "@types";

interface Props {
    scores: PlatformScore[];
    pivot: "platform" | "category";
}
const { scores, pivot } = Astro.props;

const headerLabel = pivot === "platform" ? "Platform" : "Category";
const scoreField = pivot === "platform" ? "platform_name" : "category_name";
---

<div
    class="p-4 m-2 bg-base-light text-crust rounded-md drop-shadow-sm overflow-x-auto"
>
    <table class="w-full">
        <thead>
            <tr class="border-b-2">
                <th class="text-left min-w-24 pb-1">{headerLabel}</th>
                <th class="text-center min-w-20 w-24 pb-1">Markets</th>
                <th class="text-center min-w-20 w-24 pb-1">Grade</th>
                <th class="text-center min-w-20 w-24 pb-1">Rel. Score</th>
                <th class="text-center min-w-20 w-24 pb-1">Abs. Score</th>
            </tr>
        </thead>
        <tbody>
            {
                scores.map((score) => (
                    <tr class="last:border-t-2">
                        <td class="px-2 py-1 text-left">{score[scoreField]}</td>
                        <td class="px-2 py-1 text-center">
                            <Markets num={score.num_markets} />
                        </td>
                        <td class="px-2 py-1 text-center">
                            <Grade grade={score.grade} />
                        </td>
                        <td class="px-2 py-1 text-center">
                            <ScoreRel num={score.score_rel} />
                        </td>
                        <td class="px-2 py-1 text-center">
                            <ScoreAbs num={score.score_abs} />
                        </td>
                    </tr>
                ))
            }
        </tbody>
    </table>
</div>
